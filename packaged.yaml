AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Serverless CLI Form Handler - accepts a form submission from a
  saving the data to a Postgres table and sending an email via SES. '
Parameters:
  ValidatedEmail:
    Type: String
    Description: (Required) A validated SES email address for receiving new submissions.
    MaxLength: 70
    Default: ben@goteleport.com
    MinLength: 4
    ConstraintDescription: Required. Must be a SES verified email address.
  DBUsername:
      NoEcho: 'true'
      Description: Username for Postsql database access
      Type: String
      MinLength: '1'
      MaxLength: '16'
      AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
      ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password Postsql database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
Globals:
  Function:
    Timeout: 10
  Api:
    EndpointConfiguration: EDGE
    Cors:
      AllowMethods: '''OPTIONS,POST'''
      AllowHeaders: '''Content-Type'''
      AllowOrigin: '''*'''
    BinaryMediaTypes:
      - 'multipart/form-data'
Resources:
  FormDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: formId
        AttributeType: S
      KeySchema:
      - AttributeName: formId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  FormDataPG:
    Type: AWS::RDS::DBCluster
    Properties:
      MasterUsername:
        Ref: DBUsername
      MasterUserPassword:
        Ref: DBPassword
      DBClusterIdentifier: aurora-postgresql-cluster
      DatabaseName: teleport-adoption-cli
      Engine: aurora-postgresql
      EngineMode: serverless
      EnableHttpEndpoint: true
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 4
        MaxCapacity: 10
        SecondsUntilAutoPause: 1000
  SubmitFormFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://jbesw-sar-public-source/ca9794e08c4d09fa76c820b9b8af1089
      Handler: app.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Environment:
        Variables:
          ValidatedEmail:
            Ref: ValidatedEmail
          FormDataTable:
            Ref: FormDataTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: FormDataTable
      - SESCrudPolicy:
          IdentityName:
            Ref: ValidatedEmail
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: /submitForm
            Method: post
Outputs:
  SubmitFormFunction:
    Description: Lambda Function ARN
    Value:
      Fn::GetAtt:
      - SubmitFormFunction
      - Arn
  SubmitFormFunctionIamRole:
    Description: Implicit IAM Role created for function
    Value:
      Fn::GetAtt:
      - SubmitFormFunctionRole
      - Arn
  FormDataTable:
    Description: DynamoDB Table
    Value:
      Ref: FormDataTable
